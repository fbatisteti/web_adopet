// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_adopet.Server;

namespace web_adopet.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201021184844_Hotfix2")]
    partial class Hotfix2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("web_adopet.Shared.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Chipado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Personalidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RacaId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("OngId");

                    b.HasIndex("RacaId");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("web_adopet.Shared.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("web_adopet.Shared.Foto", b =>
                {
                    b.Property<int>("FotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FotoId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("web_adopet.Shared.Historico", b =>
                {
                    b.Property<int>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Anotacoes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("VacinasId")
                        .HasColumnType("int");

                    b.HasKey("HistoricoId");

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("web_adopet.Shared.Ong", b =>
                {
                    b.Property<int>("OngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("OngId");

                    b.ToTable("Ongs");
                });

            modelBuilder.Entity("web_adopet.Shared.Raca", b =>
                {
                    b.Property<int>("RacaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RacaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Racas");
                });

            modelBuilder.Entity("web_adopet.Shared.Vacina", b =>
                {
                    b.Property<int>("VacinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Giardia")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("HistoricoId")
                        .HasColumnType("int");

                    b.Property<bool>("Leishmaniose")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Raiva")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Traqueobronquite")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V10")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V12")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V3")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V4")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V5")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("V8")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("VacinaId");

                    b.HasIndex("HistoricoId")
                        .IsUnique();

                    b.ToTable("Vacinas");
                });

            modelBuilder.Entity("web_adopet.Shared.Animal", b =>
                {
                    b.HasOne("web_adopet.Shared.Categoria", "Categoria")
                        .WithMany("Animais")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_adopet.Shared.Ong", "Ong")
                        .WithMany("Animais")
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_adopet.Shared.Raca", "Raca")
                        .WithMany("Animais")
                        .HasForeignKey("RacaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_adopet.Shared.Foto", b =>
                {
                    b.HasOne("web_adopet.Shared.Animal", "Animal")
                        .WithMany("Fotos")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_adopet.Shared.Historico", b =>
                {
                    b.HasOne("web_adopet.Shared.Animal", "Animal")
                        .WithOne("Historico")
                        .HasForeignKey("web_adopet.Shared.Historico", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_adopet.Shared.Raca", b =>
                {
                    b.HasOne("web_adopet.Shared.Categoria", "Categoria")
                        .WithMany("Racas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_adopet.Shared.Vacina", b =>
                {
                    b.HasOne("web_adopet.Shared.Historico", "Historico")
                        .WithOne("Vacina")
                        .HasForeignKey("web_adopet.Shared.Vacina", "HistoricoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
